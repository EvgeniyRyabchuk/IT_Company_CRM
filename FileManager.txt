public function fileManager(Request $request, $projectId) {

        $command = $request->get('command');
        $project = Project::findOrFail($projectId);

        $path = "projects/$projectId/data";



        if($request->input('arguments')) {
            $args =  json_decode($request->input('arguments'), true, 100);
            $pathInfo = $args["pathInfo"] ?? null;
            $name = $args["name"] ?? null;
        }
//        return response()->json($pathInfo);

        if($pathInfo) {
            if(count($pathInfo) > 0) {
                foreach ($pathInfo as $info) {
                    $path .= '/' . $info["name"];
                }
            }
        }



        switch ($command) {
            case "GetDirContents":
                $files = ProjectFile::where([
                    "project_id" => $projectId,
                    "path" => $path
                ])->get();

                return response()->json([
                    "success" => true,
                    "result" => $files,
                    "errorCode" => null,
                    "errorText" => ""
                ]);

            case "CreateDir":
                FileManager::createDirectory($path);
                $projectFile = new ProjectFile();
                $projectFile->name = $name;
                $projectFile->created_at = Carbon::now();
                $projectFile->hasSubDirectories = 0;
                $projectFile->isDirectory = 1;
                $projectFile->size = 0;
                $projectFile->path = $path;
                $projectFile->project()->associate($project);
                $projectFile->save();
                return response()->json([
                    "success" => true,
                    "result" => null,
                    "errorCode" => null,
                    "errorText" => ""
                ]);

            case "SimpleUpload":

//                $fileName = FileManager::getFileNameFromArgs($request);
//                $request->file("chunk")->storeAs($path, $fileName);
                break;
            case "UploadChunk":
                $result = FileManager::saveOneChunk($request, $path);
                if($result["status"] == "Saved") {
                    $projectFile = new ProjectFile();
                    $projectFile->name = $result["meta"]["name"];
                    $projectFile->created_at = $result["meta"]["dateModified"];
                    $projectFile->hasSubDirectories = $result["meta"]["hasSubDirectories"];
                    $projectFile->isDirectory = $result["meta"]["isDirectory"];
                    $projectFile->size = $result["meta"]["size"];
                    $projectFile->path = $result["meta"]["path"];
                    $projectFile->project()->associate($project);
                    $projectFile->save();

                    return response()->json([
                        "success" => true,
                        "result" => $projectFile,
                        "errorCode" => null,
                        "errorText" => ""
                    ]);
                }
            break;

            default:
                return response()->json(["message" => "command not found"], 404);
        }

        return response()->json(["message" => "OK = $command"]);
    }

d
d
