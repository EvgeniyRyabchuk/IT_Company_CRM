(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6847],{17130:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/forms/form-elements/pickers",function(){return t(88797)}])},11534:function(e,n,t){"use strict";t.d(n,{Z:function(){return S}});var a=t(85893),r=t(67294),s=t(87357),o=t(66242),i=t(34386),l=t(67720),c=t(57922),d=t(93946),u=t(78445),m=t(44267),p=t(96420),x=t(98396),D=t(33454),f=t(99770),h=t(90738),g=t(53917),k=t(93031),P=t(15660),y=t.n(P),b=t(74931),j=t(66485),I=t.n(j),w=function(e){return e&&("TEXTAREA"===e.nodeName||"INPUT"===e.nodeName)},C=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=(0,r.useRef)(null),t=function(){e.onSuccess&&e.onSuccess(),e.selectOnCopy&&w(n.current)&&n.current.select()},a=function(){e.onError&&e.onError(),!1!==e.selectOnError&&w(n.current)&&n.current.select()},s=function(e){I()(e).then(t).catch(a)},o=(0,r.useCallback)((function(e){"string"===typeof e?s(e):n.current&&s(n.current.value)}),[]);return{copy:o,target:n}};function T(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function B(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){T(e,n,t[n])}))}return e}var S=function(e){var n=e.id,t=e.sx,P=e.code,j=e.title,I=e.children,w=e.className,T=(0,r.useState)(!1),S=T[0],M=T[1],v=(0,r.useState)(null!==P.tsx?"tsx":"jsx"),F=v[0],Z=v[1],O=C(),N=(0,x.Z)((function(e){return e.breakpoints.down("md")}));(0,r.useEffect)((function(){y().highlightAll()}),[S,F]);return(0,a.jsxs)(o.Z,{className:w,sx:B({"& .MuiCardHeader-action":{lineHeight:.8}},t),id:n||"card-snippet--".concat(j.toLowerCase().replace(/ /g,"-")),children:[(0,a.jsx)(u.Z,B({title:j,titleTypographyProps:{variant:"h6"}},N?{}:{action:(0,a.jsx)(d.Z,{onClick:function(){return M(!S)},children:(0,a.jsx)(f.Z,{fontSize:"small"})})})),(0,a.jsx)(m.Z,{children:I}),N?null:(0,a.jsxs)(c.Z,{in:S,children:[(0,a.jsx)(l.Z,{sx:{my:0}}),(0,a.jsxs)(m.Z,{sx:{position:"relative","& pre":{m:"0 !important",maxHeight:500}},children:[(0,a.jsx)(s.Z,{sx:{mb:4,display:"flex",alignItems:"center",justifyContent:"flex-end"},children:(0,a.jsxs)(D.Z,{exclusive:!0,size:"small",color:"primary",value:F,onChange:function(e,n){return null!==n?Z(n):null},children:[null!==P.tsx?(0,a.jsx)(p.Z,{value:"tsx",children:(0,a.jsx)(k.Z,{fontSize:"small"})}):null,null!==P.jsx?(0,a.jsx)(p.Z,{value:"jsx",children:(0,a.jsx)(g.Z,{fontSize:"small"})}):null]})}),(0,a.jsx)(i.Z,{title:"Copy the source",placement:"top",children:(0,a.jsx)(d.Z,{onClick:function(){O.copy(null!==P.tsx&&"tsx"===F?P.tsx.props.children.props.children:null!==P.jsx&&"jsx"===F?P.jsx.props.children.props.children:""),b.ZP.success("The source code has been copied to your clipboard.",{duration:2e3})},sx:{top:"5rem",right:"2.5625rem",position:"absolute",color:function(e){return e.palette.grey[100]}},children:(0,a.jsx)(h.Z,{fontSize:"small"})})}),(0,a.jsx)(s.Z,{children:null!==P[F]?P[F]:null})]})]})]})}},72794:function(e,n,t){"use strict";var a=t(85893),r=t(86886);n.Z=function(e){var n=e.title,t=e.subtitle;return(0,a.jsxs)(r.ZP,{item:!0,xs:12,children:[n,t||null]})}},88797:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return We}});var a=t(85893),r=t(86886),s=t(50122),o=t(15861),i=t(72794),l=t(11534),c=t(67294),d=t(87357),u=t(33754),m=t(50135),p=t(16206),x=t(39300),D=t(50720),f=t(75830),h=t(69884),g=t(95826),k=t(77058);function P(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){P(e,n,t[n])}))}return e}var b={fr:f.Z,ar:h.Z,en:g.Z},j=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,k.$)().i18n;return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(u.M,{label:"Basic",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,y({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(u.M,{disabled:!0,label:"Disabled",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,y({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(u.M,{readOnly:!0,label:"Readonly",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,y({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,locale:b[r.language],children:(0,a.jsx)(u.M,{value:n,label:"Localization",onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,y({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(u.M,{openTo:"year",disableFuture:!0,label:"Responsive",value:n,views:["year","month","day"],onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,y({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(x.O,{label:"For mobile",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,y({},e))}})})]})},I=t(45459);function w(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function C(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){w(e,n,t[n])}))}return e}var T={fr:f.Z,ar:h.Z,en:g.Z},B=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date("".concat((new Date).getFullYear(),"-01-01 12:00"))),s=r[0],o=r[1],i=(0,c.useState)(new Date("".concat((new Date).getFullYear(),"-01-01 12:00"))),l=i[0],u=i[1],x=(0,k.$)().i18n;return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(I.j,{label:"Basic",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,C({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(I.j,{disabled:!0,label:"Disabled",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,C({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(I.j,{readOnly:!0,label:"ReadOnly",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,C({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(I.j,{value:s,label:"Min/Max Time",minTime:new Date(0,0,0,8),maxTime:new Date(0,0,0,18,45),onChange:function(e){return o(e)},renderInput:function(e){return(0,a.jsx)(m.Z,C({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(I.j,{value:l,label:"Disable odd hours",onChange:function(e){return u(e)},renderInput:function(e){return(0,a.jsx)(m.Z,C({},e))},shouldDisableTime:function(e,n){return!!("hours"===n&&e%2)}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,locale:T[x.language],children:(0,a.jsx)(I.j,{label:"Localization",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,C({},e))}})})]})},S=t(31107),M=t(24511);function v(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function F(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){v(e,n,t[n])}))}return e}var Z={fr:f.Z,ar:h.Z,en:g.Z},O=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,k.$)().i18n;return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(S.x,{label:"Basic",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,F({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(S.x,{disabled:!0,label:"Disabled",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,F({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(S.x,{readOnly:!0,label:"Readonly",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,F({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,locale:Z[r.language],children:(0,a.jsx)(S.x,{label:"Localization",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,F({},e))}})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(S.x,{value:n,label:"Ignore date and time",onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,F({},e))},minDateTime:new Date("".concat((new Date).getFullYear(),"-01-01 12:00"))})}),(0,a.jsx)(D._,{dateAdapter:p.Z,children:(0,a.jsx)(M.W,{label:"For mobile",value:n,onChange:function(e){return t(e)},renderInput:function(e){return(0,a.jsx)(m.Z,F({},e))}})})]})},N=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport DatePicker from '@mui/lab/DatePicker'\nimport TextField from '@mui/material/TextField'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport MobileDatePicker from '@mui/lab/MobileDatePicker'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\n\nconst langObj = { fr, ar, en }\n\nconst DatePickers = () => {\n  // ** State\n  const [basicPicker, setBasicPicker] = useState(new Date())\n\n\n  // ** Hook\n  const { i18n } = useTranslation()\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          label='Basic'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          disabled\n          label='Disabled'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          readOnly\n          label='Readonly'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={langObj[i18n.language]}>\n        <DatePicker\n          value={basicPicker}\n          label='Localization'\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          openTo='year'\n          disableFuture\n          label='Responsive'\n          value={basicPicker}\n          views={['year', 'month', 'day']}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <MobileDatePicker\n          label='For mobile'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  )\n}\n\nexport default DatePickers\n"})}),L=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport DateTimePicker from '@mui/lab/DateTimePicker'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\n\nconst langObj = { fr, ar, en }\n\nconst DateTimePickers = () => {\n  // ** State\n  const [basicPicker, setBasicPicker] = useState(new Date())\n\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          label='Basic'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          disabled\n          label='Disabled'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          readOnly\n          label='Readonly'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={langObj[i18n.language]}>\n        <DateTimePicker\n          label='Localization'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          value={basicPicker}\n          label='Ignore date and time'\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n          minDateTime={new Date({new Date().getFullYear()}-01-01 12:00)}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <MobileDateTimePicker\n          label='For mobile'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  )\n}\n\nexport default DateTimePickers\n"})}),A=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport DateTimePicker from '@mui/lab/DateTimePicker'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\n\nconst langObj = { fr, ar, en }\n\nconst DateTimePickers = () => {\n  // ** State\n  const [basicPicker, setBasicPicker] = useState(new Date())\n\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          label='Basic'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          disabled\n          label='Disabled'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          readOnly\n          label='Readonly'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={langObj[i18n.language]}>\n        <DateTimePicker\n          label='Localization'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          value={basicPicker}\n          label='Ignore date and time'\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n          minDateTime={new Date({new Date().getFullYear()}-01-01 12:00)}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <MobileDateTimePicker\n          label='For mobile'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  )\n}\n\nexport default DateTimePickers\n"})}),R=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport DatePicker from '@mui/lab/DatePicker'\nimport TextField from '@mui/material/TextField'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport MobileDatePicker from '@mui/lab/MobileDatePicker'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\n\n// ** Third Party imports\nimport { Locale } from 'date-fns'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\n\nconst langObj: { [key: string]: Locale } = { fr, ar, en }\n\nconst DatePickers = () => {\n  // ** State\n  const [basicPicker, setBasicPicker] = useState<Date | null>(new Date())\n\n  // ** Hook\n  const { i18n } = useTranslation()\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          label='Basic'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          disabled\n          label='Disabled'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          readOnly\n          label='Readonly'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={langObj[i18n.language]}>\n        <DatePicker\n          value={basicPicker}\n          label='Localization'\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DatePicker\n          openTo='year'\n          disableFuture\n          label='Responsive'\n          value={basicPicker}\n          views={['year', 'month', 'day']}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <MobileDatePicker\n          label='For mobile'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  )\n}\n\nexport default DatePickers\n"})}),z=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport DateTimePicker from '@mui/lab/DateTimePicker'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport MobileDateTimePicker from '@mui/lab/MobileDateTimePicker'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\n\n// ** Third Party imports\nimport { Locale } from 'date-fns'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\n\nconst langObj: { [key: string]: Locale } = { fr, ar, en }\n\nconst DateTimePickers = () => {\n  // ** State\n  const [basicPicker, setBasicPicker] = useState<Date | null>(new Date())\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          label='Basic'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          disabled\n          label='Disabled'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          readOnly\n          label='Readonly'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={langObj[i18n.language]}>\n        <DateTimePicker\n          label='Localization'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          value={basicPicker}\n          label='Ignore date and time'\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n          minDateTime={new Date({new Date().getFullYear()}-01-01 12:00)}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <MobileDateTimePicker\n          label='For mobile'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  )\n}\n\nexport default DateTimePickers\n"})}),Y=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TimePicker from '@mui/lab/TimePicker'\nimport TextField from '@mui/material/TextField'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\n\n// ** Third Party imports\nimport { Locale } from 'date-fns'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\n\nconst langObj: { [key: string]: Locale } = { fr, ar, en }\n\nconst TimePickers = () => {\n  // ** State\n  const [basicPicker, setBasicPicker] = useState<Date | null>(new Date())\n  const [minMaxPicker, setMinMaxPicker] = useState<Date | null>(new Date())\n  const [oddTimePicker, setOddTimePicker] = useState<Date | string | null>(\n    new Date({new Date().getFullYear()}-01-01 12:00)\n  )\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          label='Basic'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          disabled\n          label='Disabled'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          readOnly\n          label='ReadOnly'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          value={minMaxPicker}\n          label='Min/Max Time'\n          minTime={new Date(0, 0, 0, 8)}\n          maxTime={new Date(0, 0, 0, 18, 45)}\n          onChange={newValue => setMinMaxPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          value={oddTimePicker}\n          label='Disable odd hours'\n          onChange={newValue => setOddTimePicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n          shouldDisableTime={(timeValue, clockType) => {\n            if (clockType === 'hours' && timeValue % 2) {\n              return true\n            }\n\n            return false\n          }}\n        />\n      </LocalizationProvider>\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={langObj[i18n.language]}>\n        <TimePicker\n          label='Localization'\n          value={basicPicker}\n          onChange={newValue => setBasicPicker(newValue)}\n          renderInput={params => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    </Box>\n  )\n}\n\nexport default TimePickers\n"})}),V=function(){return(0,a.jsxs)(r.ZP,{container:!0,spacing:6,children:[(0,a.jsx)(i.Z,{title:(0,a.jsx)(o.Z,{variant:"h5",children:(0,a.jsx)(s.Z,{href:"https://mui.com/material-ui/lab-date-and-time-pickers/",target:"_blank",children:"MUI Pickers"})}),subtitle:(0,a.jsx)(o.Z,{variant:"body2",children:"Date and Time pickers allow selecting a single value from a pre-determined set"})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"MUI Date Pickers",code:{tsx:R,jsx:N},children:(0,a.jsx)(j,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"MUI Time Pickers",code:{tsx:Y,jsx:A},children:(0,a.jsx)(B,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"MUI DateTime Pickers",code:{tsx:z,jsx:L},children:(0,a.jsx)(O,{})})})]})},W=t(45225),H=t(9198),E=t.n(H);function U(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function _(){return _=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},_.apply(this,arguments)}var Q=(0,c.forwardRef)((function(e,n){var t=_({},e),r=t.label,s=t.readOnly;return(0,a.jsx)(m.Z,function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){U(e,n,t[n])}))}return e}({inputRef:n},t,{label:r||""},s&&{inputProps:{readOnly:!0}}))})),q=Q,$=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showTimeSelect:!0,selected:n,timeIntervals:15,showTimeSelectOnly:!0,dateFormat:"h:mm aa",id:"time-only-picker",timeCaption:"Time Picker",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Time Only"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showTimeSelect:!0,timeFormat:"HH:mm",timeIntervals:15,selected:s,id:"date-time-picker",timeCaption:"Time Picker",dateFormat:"MM/dd/yyyy h:mm aa",onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Date & Time"})})})]})},X=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"basic-input",onChange:function(e){return t(e)},placeholderText:"Click to select a date",customInput:(0,a.jsx)(q,{label:"Basic"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{disabled:!0,selected:n,id:"disabled-input",onChange:function(e){return t(e)},placeholderText:"Click to select a date",customInput:(0,a.jsx)(q,{label:"Disabled"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{readOnly:!0,selected:n,id:"read-only-input",onChange:function(e){return t(e)},placeholderText:"Click to select a date",customInput:(0,a.jsx)(q,{readOnly:!0,label:"Readonly"})})})]})},G=t(32912);function J(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}function K(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function ee(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,r,s=[],o=!0,i=!1;try{for(t=t.call(e);!(o=(a=t.next()).done)&&(s.push(a.value),!n||s.length!==n);o=!0);}catch(l){i=!0,r=l}finally{try{o||null==t.return||t.return()}finally{if(i)throw r}}return s}}(e,n)||function(e,n){if(!e)return;if("string"===typeof e)return J(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return J(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var ne=function(){var e=(0,c.useState)(null),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1],i=(0,c.useState)(null),l=i[0],u=i[1],p=(0,c.useState)(new Date),x=p[0],D=p[1],f=(0,c.forwardRef)((function(e,n){var t=(0,G.default)(e.start,"MM/dd/yyyy"),r=null!==e.end?" - ".concat((0,G.default)(e.end,"MM/dd/yyyy")):null,s="".concat(t).concat(null!==r?r:"");return(0,a.jsx)(m.Z,function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){K(e,n,t[n])}))}return e}({inputRef:n,label:e.label||""},e,{value:s}))}));return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selectsRange:!0,endDate:n,selected:s,startDate:s,id:"date-range-picker",onChange:function(e){var n=ee(e,2),a=n[0],r=n[1];o(a),t(r)},shouldCloseOnSelect:!1,customInput:(0,a.jsx)(f,{label:"Date Range",start:s,end:n})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selectsRange:!0,monthsShown:2,endDate:l,selected:x,startDate:x,shouldCloseOnSelect:!1,id:"date-range-picker-months",onChange:function(e){var n=ee(e,2),t=n[0],a=n[1];D(t),u(a)},customInput:(0,a.jsx)(f,{label:"Multiple Months",end:l,start:x})})})]})},te=t(7069),ae=t(77349),re=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{id:"min-date",selected:n,minDate:(0,te.default)(new Date,5),onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Min Date"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{id:"max-date",selected:s,maxDate:(0,ae.default)(new Date,5),onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Max Date"})})})]})},se={fr:f.Z,ar:h.Z,en:g.Z},oe=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1],i=(0,k.$)().i18n;return(0,H.registerLocale)(i.language,se[i.language]),(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"locale-picker",locale:i.language,onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Locale Dates"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showTimeSelect:!0,selected:s,id:"locale-time",locale:i.language,dateFormat:"MM/dd/yyyy h:mm aa",onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Locale Time"})})})]})},ie=function(){var e=(0,c.useState)(null),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1],i=(0,c.useState)(null),l=i[0],u=i[1],m=(0,c.useState)(new Date),p=m[0],x=m[1],D=(0,c.useState)(new Date),f=D[0],h=D[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{isClearable:!0,id:"picker-clear",selected:s,popperPlacement:"top-start",portalId:"react-datepicker-portal",customInput:(0,a.jsx)(q,{label:"Clear"}),onChange:function(e){return o(e)}})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showWeekNumbers:!0,id:"picker-week-num",selected:f,popperPlacement:"top-start",portalId:"react-datepicker-portal",onChange:function(e){return h(e)},customInput:(0,a.jsx)(q,{label:"Week Numbers"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{id:"picker-filter",selected:p,filterDate:function(e){var n=new Date(e).getDay();return 0!==n&&6!==n},popperPlacement:"top-start",portalId:"react-datepicker-portal",onChange:function(e){return x(e)},customInput:(0,a.jsx)(q,{label:"Filter Dates"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"picker-open-date",popperPlacement:"top-start",portalId:"react-datepicker-portal",openToDate:new Date("1993/09/28"),onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Open To Date"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{todayButton:"Today",selected:l,id:"picker-date-today-btn",popperPlacement:"top-start",portalId:"react-datepicker-portal",onChange:function(e){return u(e)},customInput:(0,a.jsx)(q,{label:"Date Today Button"})})})]})},le=t(74931),ce=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=function(e){(0,le.ZP)(e,{duration:2e3})};return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"callback-open",dateFormat:"MM/dd/yyyy",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Open & Closed"}),onCalendarOpen:function(){return r("Selected Date: ".concat(new Date(n||"").toLocaleDateString()))},onCalendarClose:function(){return r("Selected Date: ".concat(new Date(n||"").toLocaleDateString()))}})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"callback-blur",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Blur"}),onBlur:function(){return r("Picker Closed")}})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"callback-change",customInput:(0,a.jsx)(q,{label:"onChange"}),onChange:function(e){t(e),r("Selected Date: ".concat(new Date(e||"").toLocaleDateString()))}})})]})},de=t(37042),ue=t(4543),me=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"specific-date",minDate:new Date,maxDate:(0,ae.default)(new Date,5),onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Specific Date Range"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showTimeSelect:!0,selected:s,id:"specific-time",dateFormat:"MM/dd/yyyy h:mm aa",onChange:function(e){return o(e)},minTime:(0,de.default)((0,ue.default)(new Date,0),17),maxTime:(0,de.default)((0,ue.default)(new Date,30),20),customInput:(0,a.jsx)(q,{label:"Specific Time"})})})]})},pe=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{id:"custom-format",selected:n,dateFormat:"MMMM d, yyyy h:mm aa",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Custom Date Format"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{id:"highlight-dates",selected:s,onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Highlight Dates"}),highlightDates:[(0,te.default)(new Date,7),(0,ae.default)(new Date,7)]})})]})},xe=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1],i=(0,c.useState)((0,de.default)((0,ue.default)(new Date,30),16)),l=i[0],u=i[1],m=(0,c.useState)((0,de.default)((0,ue.default)(new Date,30),16)),p=m[0],x=m[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,id:"include-dates",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Include Dates"}),includeDates:[new Date,(0,ae.default)(new Date,1)]})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{id:"exclude-dates",selected:s,onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Exclude Dates"}),excludeDates:[(0,te.default)(new Date,1),(0,te.default)(new Date,2)]})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showTimeSelect:!0,selected:l,id:"include-time",dateFormat:"MM/dd/yyyy h:mm aa",onChange:function(e){return u(e)},customInput:(0,a.jsx)(q,{label:"Include Time"}),includeTimes:[(0,de.default)((0,ue.default)(new Date,0),17),(0,de.default)((0,ue.default)(new Date,30),18),(0,de.default)((0,ue.default)(new Date,30),19),(0,de.default)((0,ue.default)(new Date,30),17)]})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showTimeSelect:!0,id:"exclude-time",selected:p,dateFormat:"MM/dd/yyyy h:mm aa",onChange:function(e){return x(e)},customInput:(0,a.jsx)(q,{label:"Exclude Time"}),excludeTimes:[(0,de.default)((0,ue.default)(new Date,0),17),(0,de.default)((0,ue.default)(new Date,30),18),(0,de.default)((0,ue.default)(new Date,30),19),(0,de.default)((0,ue.default)(new Date,30),17)]})})]})},De=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1],i=(0,c.useState)(new Date),l=i[0],u=i[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:s,id:"month-picker",showMonthYearPicker:!0,dateFormat:"MM/yyyy",onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Month Picker"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showYearPicker:!0,selected:n,id:"year-picker",dateFormat:"MM/yyyy",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Year Picker"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:l,id:"quarter-picker",showQuarterYearPicker:!0,dateFormat:"yyyy, QQQ",onChange:function(e){return u(e)},customInput:(0,a.jsx)(q,{label:"Quarter Picker"})})})]})},fe=function(){var e=(0,c.useState)(new Date),n=e[0],t=e[1],r=(0,c.useState)(new Date),s=r[0],o=r[1],i=(0,c.useState)(new Date),l=i[0],u=i[1];return(0,a.jsxs)(d.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:s,showMonthDropdown:!0,id:"month-dropdown",placeholderText:"MM-DD-YYYY",onChange:function(e){return o(e)},customInput:(0,a.jsx)(q,{label:"Month Dropdown"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{selected:n,showYearDropdown:!0,id:"year-dropdown",placeholderText:"MM-DD-YYYY",onChange:function(e){return t(e)},customInput:(0,a.jsx)(q,{label:"Year Dropdown"})})}),(0,a.jsx)(d.Z,{children:(0,a.jsx)(E(),{showYearDropdown:!0,showMonthDropdown:!0,selected:l,id:"month-year-dropdown",placeholderText:"MM-DD-YYYY",onChange:function(e){return u(e)},customInput:(0,a.jsx)(q,{label:"Month & Year Dropdown"})})})]})},he=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersBasic = () => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='basic-input'\n          onChange={date => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Basic' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          disabled\n          selected={date}\n          id='disabled-input'\n          onChange={date => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Disabled' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          readOnly\n          selected={date}\n          id='read-only-input'\n          onChange={date => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Readonly' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersBasic\n"})}),ge=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport toast from 'react-hot-toast'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCallbacks = () => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  const handlePickerCallback = msg => {\n    toast(msg, { duration: 2000 })\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='callback-open'\n          dateFormat='MM/dd/yyyy'\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Open & Closed' />}\n          onCalendarOpen={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n          onCalendarClose={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='callback-blur'\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Blur' />}\n          onBlur={() => handlePickerCallback('Picker Closed')}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='callback-change'\n          customInput={<CustomInput label='onChange' />}\n          onChange={date => {\n            setDate(date)\n            handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})\n          }}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersCallbacks\n"})}),ke=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\nimport setHours from 'date-fns/setHours'\nimport DatePicker from 'react-datepicker'\nimport setMinutes from 'date-fns/setMinutes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersIncludeExclude = () => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  const [dateExclude, setDateExclude] = useState(new Date())\n\n  const [time, setTime] = useState(setHours(setMinutes(new Date(), 30), 16))\n\n  const [timeExclude, setTimeExclude] = useState(setHours(setMinutes(new Date(), 30), 16))\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='include-dates'\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Include Dates' />}\n          includeDates={[new Date(), addDays(new Date(), 1)]}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='exclude-dates'\n          selected={dateExclude}\n          onChange={date => setDateExclude(date)}\n          customInput={<CustomInput label='Exclude Dates' />}\n          excludeDates={[subDays(new Date(), 1), subDays(new Date(), 2)]}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='include-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={date => setTime(date)}\n          customInput={<CustomInput label='Include Time' />}\n          includeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          id='exclude-time'\n          selected={timeExclude}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={date => setTimeExclude(date)}\n          customInput={<CustomInput label='Exclude Time' />}\n          excludeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersIncludeExclude\n"})}),Pe=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCustomization = () => {\n  // ** States\n  const [dateFormat, setDateFormat] = useState(new Date())\n\n  const [dateHighlight, setDateHighlight] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          id='custom-format'\n          selected={dateFormat}\n          dateFormat='MMMM d, yyyy h:mm aa'\n          onChange={date => setDateFormat(date)}\n          customInput={<CustomInput label='Custom Date Format' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='highlight-dates'\n          selected={dateHighlight}\n          onChange={date => setDateHighlight(date)}\n          customInput={<CustomInput label='Highlight Dates' />}\n          highlightDates={[subDays(new Date(), 7), addDays(new Date(), 7)]}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersCustomization\n"})}),ye=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst langObj = { fr, ar, en }\n\nconst PickersLocale = () => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  const [time, setTime] = useState(new Date())\n\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  registerLocale(i18n.language, langObj[i18n.language])\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='locale-picker'\n          locale={i18n.language}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Locale Dates' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='locale-time'\n          locale={i18n.language}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={date => setTime(date)}\n          customInput={<CustomInput label='Locale Time' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersLocale\n"})}),be=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYearDropdowns = () => {\n  // ** States\n  const [year, setYear] = useState(new Date())\n\n  const [month, setMonth] = useState(new Date())\n\n  const [monthYear, setMonthYear] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={month}\n          showMonthDropdown\n          id='month-dropdown'\n          placeholderText='MM-DD-YYYY'\n          onChange={date => setMonth(date)}\n          customInput={<CustomInput label='Month Dropdown' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={year}\n          showYearDropdown\n          id='year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          onChange={date => setYear(date)}\n          customInput={<CustomInput label='Year Dropdown' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          selected={monthYear}\n          id='month-year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          onChange={date => setMonthYear(date)}\n          customInput={<CustomInput label='Month & Year Dropdown' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersMonthYearDropdowns\n"})}),je=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYear = () => {\n  // ** States\n  const [year, setYear] = useState(new Date())\n\n  const [month, setMonth] = useState(new Date())\n\n  const [quarter, setQuarter] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={month}\n          id='month-picker'\n          showMonthYearPicker\n          dateFormat='MM/yyyy'\n          onChange={date => setMonth(date)}\n          customInput={<CustomInput label='Month Picker' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showYearPicker\n          selected={year}\n          id='year-picker'\n          dateFormat='MM/yyyy'\n          onChange={date => setYear(date)}\n          customInput={<CustomInput label='Year Picker' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={quarter}\n          id='quarter-picker'\n          showQuarterYearPicker\n          dateFormat='yyyy, QQQ'\n          onChange={date => setQuarter(date)}\n          customInput={<CustomInput label='Quarter Picker' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersMonthYear\n"})}),Ie=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersOptions = () => {\n  // ** States\n  const [dateOpen, setDateOpen] = useState(null)\n\n  const [dateClear, setDateClear] = useState(new Date())\n\n  const [dateTodayBtn, setDateTodayBtn] = useState(null)\n\n  const [dateFilter, setDateFilter] = useState(new Date())\n\n  const [dateWeekNum, setDateWeekNum] = useState(new Date())\n\n  const isWeekday = date => {\n    const day = new Date(date).getDay()\n\n    return day !== 0 && day !== 6\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          isClearable\n          id='picker-clear'\n          selected={dateClear}\n          customInput={<CustomInput label='Clear' />}\n          onChange={date => setDateClear(date)}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showWeekNumbers\n          id='picker-week-num'\n          selected={dateWeekNum}\n          onChange={date => setDateWeekNum(date)}\n          customInput={<CustomInput label='Week Numbers' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='picker-filter'\n          selected={dateFilter}\n          filterDate={isWeekday}\n          onChange={date => setDateFilter(date)}\n          customInput={<CustomInput label='Filter Dates' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={dateOpen}\n          id='picker-open-date'\n          openToDate={new Date('1993/09/28')}\n          onChange={date => setDateOpen(date)}\n          customInput={<CustomInput label='Open To Date' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          todayButton='Today'\n          selected={dateTodayBtn}\n          id='picker-date-today-btn'\n          onChange={date => setDateTodayBtn(date)}\n          customInput={<CustomInput label='Date Today Button' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersOptions\n"})}),we=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState, forwardRef } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\n\n// ** Third Party Imports\nimport format from 'date-fns/format'\nimport DatePicker from 'react-datepicker'\n\nconst PickersRange = () => {\n  // ** States\n  const [endDate, setEndDate] = useState(null)\n\n  const [startDate, setStartDate] = useState(new Date())\n\n  const [endDateRange, setEndDateRange] = useState(null)\n\n  const [startDateRange, setStartDateRange] = useState(new Date())\n\n  const handleOnChange = dates => {\n    const [start, end] = dates\n\n    setStartDate(start)\n    setEndDate(end)\n  }\n\n  const handleOnChangeRange = dates => {\n    const [start, end] = dates\n\n    setStartDateRange(start)\n    setEndDateRange(end)\n  }\n\n  const CustomInput = forwardRef((props, ref) => {\n    const startDate = format(props.start, 'MM/dd/yyyy')\n\n    const endDate = props.end !== null ?  - {format(props.end, 'MM/dd/yyyy')} : null\n\n    const value = {startDate}{endDate !== null ? endDate : ''}\n\n    return <TextField inputRef={ref} label={props.label || ''} {...props} value={value} />\n  })\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selectsRange\n          endDate={endDate}\n          selected={startDate}\n          startDate={startDate}\n          id='date-range-picker'\n          onChange={handleOnChange}\n          shouldCloseOnSelect={false}\n          customInput={<CustomInput label='Date Range' start={startDate} end={endDate} />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selectsRange\n          monthsShown={2}\n          endDate={endDateRange}\n          selected={startDateRange}\n          startDate={startDateRange}\n          shouldCloseOnSelect={false}\n          id='date-range-picker-months'\n          onChange={handleOnChangeRange}\n          customInput={<CustomInput label='Multiple Months' end={endDateRange} start={startDateRange} />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersRange\n"})}),Ce=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport setHours from 'date-fns/setHours'\nimport DatePicker from 'react-datepicker'\nimport setMinutes from 'date-fns/setMinutes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersSpecificRange = () => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  const [time, setTime] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='specific-date'\n          minDate={new Date()}\n          maxDate={addDays(new Date(), 5)}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Specific Date Range' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='specific-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={date => setTime(date)}\n          minTime={setHours(setMinutes(new Date(), 0), 17)}\n          maxTime={setHours(setMinutes(new Date(), 30), 20)}\n          customInput={<CustomInput label='Specific Time' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersSpecificRange\n"})}),Te=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersTime = () => {\n  // ** States\n  const [time, setTime] = useState(new Date())\n\n  const [dateTime, setDateTime] = useState(new Date())\n\n  const [customTime, setCustomTime] = useState(new Date())\n\n  const CustomTimeInput = props => {\n    return (\n      <TextField\n        {...props}\n        size='small'\n        value={props.value}\n        sx={{ maxWidth: '190px' }}\n        onChange={e => props.onChange(e.target.value)}\n      />\n    )\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          timeIntervals={15}\n          showTimeSelectOnly\n          dateFormat='h:mm aa'\n          id='time-only-picker'\n          timeCaption='Time Picker'\n          onChange={date => setTime(date)}\n          customInput={<CustomInput label='Time Only' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          timeFormat='HH:mm'\n          timeIntervals={15}\n          selected={dateTime}\n          id='date-time-picker'\n          timeCaption='Time Picker'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={date => setDateTime(date)}\n          customInput={<CustomInput label='Date & Time' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeInput\n          selected={customTime}\n          id='custom-time-input'\n          customTimeInput={<CustomTimeInput />}\n          onChange={date => setCustomTime(date)}\n          customInput={<CustomInput label='Custom Time Input' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersTime\n"})}),Be=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMinMax = () => {\n  // ** States\n  const [minDate, setMinDate] = useState(new Date())\n\n  const [maxDate, setMaxDate] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          id='min-date'\n          selected={minDate}\n          minDate={subDays(new Date(), 5)}\n          onChange={date => setMinDate(date)}\n          customInput={<CustomInput label='Min Date' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='max-date'\n          selected={maxDate}\n          maxDate={addDays(new Date(), 5)}\n          onChange={date => setMaxDate(date)}\n          customInput={<CustomInput label='Max Date' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersMinMax\n"})}),Se=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport toast from 'react-hot-toast'\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCallbacks = () => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n\n  const handlePickerCallback = (msg: string) => {\n    toast(msg, { duration: 2000 })\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='callback-open'\n          dateFormat='MM/dd/yyyy'\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Open & Closed' />}\n          onCalendarOpen={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n          onCalendarClose={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='callback-blur'\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Blur' />}\n          onBlur={() => handlePickerCallback('Picker Closed')}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='callback-change'\n          customInput={<CustomInput label='onChange' />}\n          onChange={(date: Date) => {\n            setDate(date)\n            handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})\n          }}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersCallbacks\n"})}),Me=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\nimport setHours from 'date-fns/setHours'\nimport DatePicker from 'react-datepicker'\nimport setMinutes from 'date-fns/setMinutes'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersIncludeExclude = () => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n  const [dateExclude, setDateExclude] = useState<DateType>(new Date())\n  const [time, setTime] = useState<DateType>(setHours(setMinutes(new Date(), 30), 16))\n  const [timeExclude, setTimeExclude] = useState<DateType>(setHours(setMinutes(new Date(), 30), 16))\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='include-dates'\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Include Dates' />}\n          includeDates={[new Date(), addDays(new Date(), 1)]}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='exclude-dates'\n          selected={dateExclude}\n          onChange={(date: Date) => setDateExclude(date)}\n          customInput={<CustomInput label='Exclude Dates' />}\n          excludeDates={[subDays(new Date(), 1), subDays(new Date(), 2)]}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='include-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={(date: Date) => setTime(date)}\n          customInput={<CustomInput label='Include Time' />}\n          includeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          id='exclude-time'\n          selected={timeExclude}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={(date: Date) => setTimeExclude(date)}\n          customInput={<CustomInput label='Exclude Time' />}\n          excludeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersIncludeExclude\n"})}),ve=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport { Locale } from 'date-fns'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst langObj: { [key: string]: Locale } = { fr, ar, en }\n\nconst PickersLocale = () => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n  const [time, setTime] = useState<DateType>(new Date())\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  registerLocale(i18n.language, langObj[i18n.language])\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='locale-picker'\n          locale={i18n.language}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Locale Dates' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='locale-time'\n          locale={i18n.language}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={(date: Date) => setTime(date)}\n          customInput={<CustomInput label='Locale Time' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersLocale\n"})}),Fe=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCustomization = () => {\n  // ** States\n  const [dateFormat, setDateFormat] = useState<DateType>(new Date())\n  const [dateHighlight, setDateHighlight] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          id='custom-format'\n          selected={dateFormat}\n          dateFormat='MMMM d, yyyy h:mm aa'\n          onChange={(date: Date) => setDateFormat(date)}\n          customInput={<CustomInput label='Custom Date Format' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='highlight-dates'\n          selected={dateHighlight}\n          onChange={(date: Date) => setDateHighlight(date)}\n          customInput={<CustomInput label='Highlight Dates' />}\n          highlightDates={[subDays(new Date(), 7), addDays(new Date(), 7)]}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersCustomization\n"})}),Ze=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYearDropdowns = () => {\n  // ** States\n  const [year, setYear] = useState<DateType>(new Date())\n  const [month, setMonth] = useState<DateType>(new Date())\n  const [monthYear, setMonthYear] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={month}\n          showMonthDropdown\n          id='month-dropdown'\n          placeholderText='MM-DD-YYYY'\n          onChange={(date: Date) => setMonth(date)}\n          customInput={<CustomInput label='Month Dropdown' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={year}\n          showYearDropdown\n          id='year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          onChange={(date: Date) => setYear(date)}\n          customInput={<CustomInput label='Year Dropdown' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          selected={monthYear}\n          id='month-year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          onChange={(date: Date) => setMonthYear(date)}\n          customInput={<CustomInput label='Month & Year Dropdown' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersMonthYearDropdowns\n"})}),Oe=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersOptions = () => {\n  // ** States\n  const [dateOpen, setDateOpen] = useState<DateType>(null)\n  const [dateClear, setDateClear] = useState<DateType>(new Date())\n  const [dateTodayBtn, setDateTodayBtn] = useState<DateType>(null)\n  const [dateFilter, setDateFilter] = useState<DateType>(new Date())\n  const [dateWeekNum, setDateWeekNum] = useState<DateType>(new Date())\n\n  const isWeekday = (date: Date) => {\n    const day = new Date(date).getDay()\n\n    return day !== 0 && day !== 6\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          isClearable\n          id='picker-clear'\n          selected={dateClear}\n          customInput={<CustomInput label='Clear' />}\n          onChange={(date: Date) => setDateClear(date)}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showWeekNumbers\n          id='picker-week-num'\n          selected={dateWeekNum}\n          onChange={(date: Date) => setDateWeekNum(date)}\n          customInput={<CustomInput label='Week Numbers' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='picker-filter'\n          selected={dateFilter}\n          filterDate={isWeekday}\n          onChange={(date: Date) => setDateFilter(date)}\n          customInput={<CustomInput label='Filter Dates' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={dateOpen}\n          id='picker-open-date'\n          openToDate={new Date('1993/09/28')}\n          onChange={(date: Date) => setDateOpen(date)}\n          customInput={<CustomInput label='Open To Date' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          todayButton='Today'\n          selected={dateTodayBtn}\n          id='picker-date-today-btn'\n          onChange={(date: Date) => setDateTodayBtn(date)}\n          customInput={<CustomInput label='Date Today Button' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersOptions\n"})}),Ne=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYear = () => {\n  // ** States\n  const [year, setYear] = useState<DateType>(new Date())\n  const [month, setMonth] = useState<DateType>(new Date())\n  const [quarter, setQuarter] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={month}\n          id='month-picker'\n          showMonthYearPicker\n          dateFormat='MM/yyyy'\n          onChange={(date: Date) => setMonth(date)}\n          customInput={<CustomInput label='Month Picker' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showYearPicker\n          selected={year}\n          id='year-picker'\n          dateFormat='MM/yyyy'\n          onChange={(date: Date) => setYear(date)}\n          customInput={<CustomInput label='Year Picker' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selected={quarter}\n          id='quarter-picker'\n          showQuarterYearPicker\n          dateFormat='yyyy, QQQ'\n          onChange={(date: Date) => setQuarter(date)}\n          customInput={<CustomInput label='Quarter Picker' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersMonthYear\n"})}),Le=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState, forwardRef } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\n\n// ** Third Party Imports\nimport format from 'date-fns/format'\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\ninterface PickerProps {\n  label?: string\n  end: Date | number\n  start: Date | number\n}\n\nconst PickersRange = () => {\n  // ** States\n  const [endDate, setEndDate] = useState<DateType>(null)\n  const [startDate, setStartDate] = useState<DateType>(new Date())\n  const [endDateRange, setEndDateRange] = useState<DateType>(null)\n  const [startDateRange, setStartDateRange] = useState<DateType>(new Date())\n\n  const handleOnChange = (dates: any) => {\n    const [start, end] = dates\n    setStartDate(start)\n    setEndDate(end)\n  }\n\n  const handleOnChangeRange = (dates: any) => {\n    const [start, end] = dates\n    setStartDateRange(start)\n    setEndDateRange(end)\n  }\n\n  const CustomInput = forwardRef((props: PickerProps, ref) => {\n    const startDate = format(props.start, 'MM/dd/yyyy')\n    const endDate = props.end !== null ?  - {format(props.end, 'MM/dd/yyyy')} : null\n\n    const value = {startDate}{endDate !== null ? endDate : ''}\n\n    return <TextField inputRef={ref} label={props.label || ''} {...props} value={value} />\n  })\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selectsRange\n          endDate={endDate}\n          selected={startDate}\n          startDate={startDate}\n          id='date-range-picker'\n          onChange={handleOnChange}\n          shouldCloseOnSelect={false}\n          customInput={\n            <CustomInput label='Date Range' start={startDate as Date | number} end={endDate as Date | number} />\n          }\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          selectsRange\n          monthsShown={2}\n          endDate={endDateRange}\n          selected={startDateRange}\n          startDate={startDateRange}\n          shouldCloseOnSelect={false}\n          id='date-range-picker-months'\n          onChange={handleOnChangeRange}\n          customInput={\n            <CustomInput\n              label='Multiple Months'\n              end={endDateRange as Date | number}\n              start={startDateRange as Date | number}\n            />\n          }\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersRange\n"})}),Ae=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport setHours from 'date-fns/setHours'\nimport DatePicker from 'react-datepicker'\nimport setMinutes from 'date-fns/setMinutes'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersSpecificRange = () => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n  const [time, setTime] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='specific-date'\n          minDate={new Date()}\n          maxDate={addDays(new Date(), 5)}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Specific Date Range' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='specific-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={(date: Date) => setTime(date)}\n          minTime={setHours(setMinutes(new Date(), 0), 17)}\n          maxTime={setHours(setMinutes(new Date(), 30), 20)}\n          customInput={<CustomInput label='Specific Time' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersSpecificRange\n"})}),Re=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersTime = () => {\n  // ** States\n  const [time, setTime] = useState<DateType>(new Date())\n  const [dateTime, setDateTime] = useState<DateType>(new Date())\n  const [customTime, setCustomTime] = useState<DateType>(new Date())\n\n  const CustomTimeInput = (props: any) => {\n    return (\n      <TextField\n        {...props}\n        size='small'\n        value={props.value}\n        sx={{ maxWidth: '190px' }}\n        onChange={e => props.onChange(e.target.value)}\n      />\n    )\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          timeIntervals={15}\n          showTimeSelectOnly\n          dateFormat='h:mm aa'\n          id='time-only-picker'\n          timeCaption='Time Picker'\n          onChange={(date: Date) => setTime(date)}\n          customInput={<CustomInput label='Time Only' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeSelect\n          timeFormat='HH:mm'\n          timeIntervals={15}\n          selected={dateTime}\n          id='date-time-picker'\n          timeCaption='Time Picker'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          onChange={(date: Date) => setDateTime(date)}\n          customInput={<CustomInput label='Date & Time' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          showTimeInput\n          selected={customTime}\n          id='custom-time-input'\n          customTimeInput={<CustomTimeInput />}\n          onChange={(date: Date) => setCustomTime(date)}\n          customInput={<CustomInput label='Custom Time Input' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersTime\n"})}),ze=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMinMax = () => {\n  // ** States\n  const [minDate, setMinDate] = useState<DateType>(new Date())\n  const [maxDate, setMaxDate] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          id='min-date'\n          selected={minDate}\n          minDate={subDays(new Date(), 5)}\n          onChange={(date: Date) => setMinDate(date)}\n          customInput={<CustomInput label='Min Date' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          id='max-date'\n          selected={maxDate}\n          maxDate={addDays(new Date(), 5)}\n          onChange={(date: Date) => setMaxDate(date)}\n          customInput={<CustomInput label='Max Date' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersMinMax\n"})}),Ye=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\nconst PickersBasic = () => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <Box>\n        <DatePicker\n          selected={date}\n          id='basic-input'\n          onChange={(date: Date) => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Basic' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          disabled\n          selected={date}\n          id='disabled-input'\n          onChange={(date: Date) => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Disabled' />}\n        />\n      </Box>\n      <Box>\n        <DatePicker\n          readOnly\n          selected={date}\n          id='read-only-input'\n          onChange={(date: Date) => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Readonly' />}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default PickersBasic\n"})}),Ve=function(){return(0,a.jsx)(W.Z,{children:(0,a.jsxs)(r.ZP,{container:!0,spacing:6,children:[(0,a.jsx)(i.Z,{subtitle:(0,a.jsx)(o.Z,{variant:"body2",children:"A simple and reusable datepicker component for React"}),title:(0,a.jsx)(o.Z,{variant:"h5",children:(0,a.jsx)(s.Z,{href:"https://github.com/Hacker0x01/react-datepicker/",target:"_blank",children:"React DatePicker"})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Date Pickers",code:{tsx:Ye,jsx:he},children:(0,a.jsx)(X,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Time Pickers",code:{tsx:Re,jsx:Te},children:(0,a.jsx)($,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Min & Max Pickers",code:{tsx:ze,jsx:Be},children:(0,a.jsx)(re,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Date Range Pickers",code:{tsx:Le,jsx:we},children:(0,a.jsx)(ne,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Specific Range",code:{tsx:Ae,jsx:Ce},children:(0,a.jsx)(me,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Callbacks",code:{tsx:Se,jsx:ge},children:(0,a.jsx)(ce,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Customization",code:{tsx:Fe,jsx:Pe},children:(0,a.jsx)(pe,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Include Exclude",code:{tsx:Me,jsx:ke},children:(0,a.jsx)(xe,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Locale",code:{tsx:ve,jsx:ye},children:(0,a.jsx)(oe,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Month & Year Dropdowns",code:{tsx:Ze,jsx:be},children:(0,a.jsx)(fe,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Month, Year & Quarter",code:{tsx:Ne,jsx:je},children:(0,a.jsx)(De,{})})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(l.Z,{title:"Options",code:{tsx:Oe,jsx:Ie},children:(0,a.jsx)(ie,{})})})]})})},We=(t(95828),function(){return(0,a.jsxs)(r.ZP,{container:!0,spacing:6,className:"match-height",children:[(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(V,{})}),(0,a.jsx)(r.ZP,{item:!0,xs:12,children:(0,a.jsx)(Ve,{})})]})})}},function(e){e.O(0,[4386,5878,8960,285,2381,9774,2888,179],(function(){return n=17130,e(e.s=n);var n}));var n=e.O();_N_E=n}]);